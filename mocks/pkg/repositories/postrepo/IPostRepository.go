// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	model "github.com/maoaeri/openapi/pkg/model"
	mock "github.com/stretchr/testify/mock"
)

// IPostRepository is an autogenerated mock type for the IPostRepository type
type IPostRepository struct {
	mock.Mock
}

// CreatePost provides a mock function with given fields: post
func (_m *IPostRepository) CreatePost(post *model.Post) error {
	ret := _m.Called(post)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Post) error); ok {
		r0 = rf(post)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteAllPosts provides a mock function with given fields:
func (_m *IPostRepository) DeleteAllPosts() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeletePost provides a mock function with given fields: postid
func (_m *IPostRepository) DeletePost(postid int) error {
	ret := _m.Called(postid)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(postid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllPosts provides a mock function with given fields: page
func (_m *IPostRepository) GetAllPosts(page int) ([]model.Post, error) {
	ret := _m.Called(page)

	var r0 []model.Post
	if rf, ok := ret.Get(0).(func(int) []model.Post); ok {
		r0 = rf(page)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Post)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(page)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPost provides a mock function with given fields: postid
func (_m *IPostRepository) GetPost(postid int) (*model.Post, error) {
	ret := _m.Called(postid)

	var r0 *model.Post
	if rf, ok := ret.Get(0).(func(int) *model.Post); ok {
		r0 = rf(postid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Post)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(postid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePost provides a mock function with given fields: postid, data
func (_m *IPostRepository) UpdatePost(postid int, data map[string]interface{}) error {
	ret := _m.Called(postid, data)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, map[string]interface{}) error); ok {
		r0 = rf(postid, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
